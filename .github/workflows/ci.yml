name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-lint
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install linting tools
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Check formatting with black
        run: black --check .

  test:
    runs-on: ubuntu-latest
    needs: lint
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: crypto_password_123
          POSTGRES_DB: crypto_warehouse
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
        ports:
          - 5432:5432

    env:
      DB_HOST: localhost
      DB_PORT: 5432
      DB_NAME: crypto_warehouse
      DB_USER: postgres
      DB_PASSWORD: crypto_password_123
      COINGECKO_API_KEY: test_api_key
      LOG_LEVEL: INFO
      ENABLE_ALERTS: false

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dashboard.txt
          pip install pytest pytest-asyncio

      - name: Wait for DB
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -p 5432 -U postgres && break
            echo "Postgres not ready yet..."
            sleep 3
          done

      - name: Run tests
        run: PYTHONPATH=. pytest tests/ -v

  dbt-test:
    runs-on: ubuntu-latest
    needs: test
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: crypto_password_123
          POSTGRES_DB: crypto_warehouse
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
        ports:
          - 5433:5432

    env:
      DB_HOST: localhost
      DB_PORT: 5433
      DB_NAME: crypto_warehouse
      DB_USER: postgres
      DB_PASSWORD: crypto_password_123
      COINGECKO_API_KEY: test_api_key
      LOG_LEVEL: INFO
      ENABLE_ALERTS: false

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-dbt
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dbt
        run: |
          python -m pip install --upgrade pip
          pip install dbt-postgres

      - name: Wait for DB
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -p 5433 -U postgres && break
            echo "Postgres not ready yet..."
            sleep 3
          done

      - name: Run dbt debug
        run: dbt debug
        working-directory: dbt

      - name: Run dbt tests
        run: dbt test
        working-directory: dbt
