name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: crypto_password_123
          POSTGRES_DB: crypto_warehouse
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dashboard.txt
          pip install pytest pytest-asyncio

      - name: Run tests
        run: |
          PYTHONPATH=. pytest tests/ -v
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: crypto_warehouse
          DB_USER: postgres
          DB_PASSWORD: crypto_password_123
          COINGECKO_API_KEY: test_api_key
          LOG_LEVEL: INFO
          ENABLE_ALERTS: false

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Check code formatting with black
        run: |
          black --check .

  dbt-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: crypto_password_123
          POSTGRES_DB: crypto_warehouse
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dbt
        run: |
          python -m pip install --upgrade pip
          pip install dbt-postgres

      - name: Run dbt debug
        run: |
          dbt debug
        working-directory: dbt
        env:
          DB_HOST: localhost
          DB_PORT: 5433
          DB_NAME: crypto_warehouse
          DB_USER: postgres
          DB_PASSWORD: crypto_password_123
          COINGECKO_API_KEY: test_api_key
          LOG_LEVEL: INFO
          ENABLE_ALERTS: false

      - name: Run dbt tests
        run: |
          dbt test
        working-directory: dbt
        env:
          DB_HOST: localhost
          DB_PORT: 5433
          DB_NAME: crypto_warehouse
          DB_USER: postgres
          DB_PASSWORD: crypto_password_123
          COINGECKO_API_KEY: test_api_key
          LOG_LEVEL: INFO
          ENABLE_ALERTS: false
